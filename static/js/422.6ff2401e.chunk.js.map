{"version":3,"file":"static/js/422.6ff2401e.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/MoviesApi.js","services/genreList.js","services/normalizationObj.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  padding: 20px;\n`;\n\nexport const ImageContainer = styled.div`\n  margin-right: 35px;\n  flex-direction: column;\n`;\n\nexport const Image = styled.img`\n  margin-top: 15px;\n  max-width: 300px;\n  display: block;\n`;\n\nexport const BackButton = styled(NavLink)``;\n\nexport const DataContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 50px;\n`;\n\nexport const DataTitle = styled.h2`\n  font-size: 30px;\n  margin-bottom: 10px;\n`;\n\nexport const DataText = styled.p`\n  font-size: 18px;\n  &:not(:last-of-type) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const AdditInfoContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const AdditInfoLink = styled(NavLink)`\n  font-size: 24px;\n  &:not(:last-of-type) {\n    margin-right: 15px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  MovieDetailsContainer,\n  ImageContainer,\n  Image,\n  BackButton,\n  DataContainer,\n  DataTitle,\n  DataText,\n  AdditInfoContainer,\n  AdditInfoLink,\n} from './MovieDetails.styled';\nimport { fetchMoviesById } from 'services/MoviesApi';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [details, setDetails] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovie = async () => {\n      try {\n        const response = await fetchMoviesById(Number(movieId));\n        console.log(response);\n        setDetails(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      {details && (\n        <MovieDetailsContainer>\n          <ImageContainer>\n            <BackButton to={location?.state?.from ?? '/'}>â‡¦ Go back</BackButton>\n            <Image src={details.img} alt={details.title}></Image>\n          </ImageContainer>\n          <DataContainer>\n            <DataTitle>\n              {details.title} ({details.releaseDate})\n            </DataTitle>\n            <DataText>User score: {details.vote}</DataText>\n            <DataTitle>Overview</DataTitle>\n            <DataText>{details.about}</DataText>\n            <DataTitle>Genres</DataTitle>\n            <DataText>{details.genre}</DataText>\n          </DataContainer>\n        </MovieDetailsContainer>\n      )}\n      <AdditInfoContainer>\n        <DataTitle>\n          <AdditInfoLink to=\"cast\">Cast</AdditInfoLink>\n          <AdditInfoLink to=\"reviews\">Reviews</AdditInfoLink>\n        </DataTitle>\n      </AdditInfoContainer>\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport {\n  normalizationMovieObj,\n  normalizationMoviesDetails,\n} from './normalizationObj';\n\nconst API_KEY = 'e5517ae4303f5ec2cd4c7059ec556fc9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/all/day?`);\n  const response = normalizationMovieObj(data.results);\n  return response;\n};\n\nexport const fetchMoviesById = async id => {\n  const { data } = await axios.get(`/movie/${id}?`);\n  const response = normalizationMoviesDetails(data);\n  return response;\n};\n\nexport const fetchMoviesBySearch = async query => {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  const response = normalizationMovieObj(data.results);\n  return response;\n};\n\nexport const fetchMoviesCredits = async id => {\n  const { data } = await axios.get(`/movie/${id}/credits?`);\n  return data.cast;\n};\n\nexport const fetchMoviesReviews = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?`);\n  return data.results;\n};\n","export const genreList = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n","import { genreList } from './genreList';\nimport noImg from '../images/noImageAvailable.jpg';\n\nconst getGenreArray = genre_ids =>\n  genre_ids.map(el => genreList[`${el}`]).join(', ');\n\nconst getGenreArrayLibrary = genres => genres.map(el => el.name).join(', ');\n\nexport const getImgPath = imgPath =>\n  !imgPath ? `${noImg}` : `https://image.tmdb.org/t/p/w500/${imgPath}`;\n\nconst getDate = date => (!date ? date : date.slice(0, 4));\n\n// -------------------------------------------------------------\nexport const normalizationMovieObj = movies => {\n  return movies.map(\n    ({\n      genres = null,\n      genre_ids = null,\n      id,\n      original_title,\n      overview,\n      popularity,\n      poster_path,\n      release_date,\n      vote_average,\n      vote_count,\n      original_name,\n    }) => ({\n      genre: genre_ids\n        ? getGenreArray(genre_ids)\n        : getGenreArrayLibrary(genres),\n      id: id,\n      title: original_title ? original_title : original_name,\n      about: overview,\n      popularity: popularity,\n      img: getImgPath(poster_path),\n      releaseDate: release_date ? getDate(release_date) : '',\n      vote: vote_average,\n      votes: vote_count,\n    })\n  );\n};\n\nexport const normalizationMoviesDetails = ({\n  poster_path,\n  title,\n  original_title,\n  vote_average,\n  overview,\n  genres,\n  release_date,\n}) => {\n  return {\n    genre: getGenreArrayLibrary(genres),\n    title: original_title ? original_title : title,\n    about: overview,\n    img: getImgPath(poster_path),\n    releaseDate: release_date ? getDate(release_date) : '',\n    vote: vote_average,\n  };\n};\n"],"names":["MovieDetailsContainer","styled","ImageContainer","Image","BackButton","NavLink","DataContainer","DataTitle","DataText","AdditInfoContainer","AdditInfoLink","movieId","useParams","useState","details","setDetails","location","useLocation","useEffect","getMovie","fetchMoviesById","Number","response","console","log","message","to","state","from","src","img","alt","title","releaseDate","vote","about","genre","axios","api_key","language","fetchTrendingMovies","data","normalizationMovieObj","results","id","normalizationMoviesDetails","fetchMoviesBySearch","query","fetchMoviesCredits","cast","fetchMoviesReviews","genreList","getGenreArray","genre_ids","map","el","join","getGenreArrayLibrary","genres","name","getImgPath","imgPath","noImg","getDate","date","slice","movies","original_title","overview","popularity","poster_path","release_date","vote_average","vote_count","original_name","votes"],"sourceRoot":""}